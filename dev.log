СВОД ЗАКОНОВ:
1) save() модели только в модели! из представлений только set().
ВОУ ВОУ! а может не надо так? зачем тогда коллбеки у save()? нет, нафиг это правило.
ПОПРАВИТЬ ВСЕ, ГДЕ ИЗ-ЗА ЭТОГО ПРАВИЛА БЫЛИ ПРОБЛЕМЫ... короч где использовался ивент sync.
2) создание новых экземпляров моделей и представлений только в контроллере!
3) все html имеют СТРОГО один дочерний элемент! иначе ничего не скомпилится.
может это и избыточно, но сделано для быстроты и удобства фреймворка. а наше соглашение
вдобавок позволяет полностью управлять всеми элементами DOM, а не вылавливать случайные div'ы.
кстати, это необязательно для CollectionView, потому что там не используется шаблон. по этой же причине
не надо удиваляться лишнему div'у в CompositeView. кстати, у него рендеринг отличный от ItemView, поэтому
чтобы его использовать, сначала надо разобраться с исходниками фреймворка и переписать исходный метод также,
как мы сделали его для ItemView.
4) модели максимально инкапсулировать от всего видимого и осязаемого. если про представления это очевидно, то
про перенаправление по страницам нет. у нас по страницам перенаправляют только представления и роутер.

ПРО КЕШ:
кеш это очень тяжелая задача... надо бы ее пока отложить, сначала все протестить и написать, а потом уже
устранять бутылочное горлышко. но в общем наверно нужно использовать модели HTTP Last-Modified и ETag.
что я хочу? хочу чтобы всегда отправляло запросы, но получало только измененную инфу или тег, что все осталось
как было. потом то что получил добавлять в кеш и в страницу. офлайн вообще работать нельзя, ибо карты.
короче кеш только для того чтобы мержить его с теми новыми данными что пришлет сервак (ну и очевидно для бутстрапа).

ПРО ФАЙЛОВУЮ СТРУКТУРУ:
да фиг пойми, короче говоря. это хотя бы лучше чем models/views/controllers/EVERYTHING.
сейчас все разбито на модули, в каждом модуле своя модель, вид, шаблоны, в разном количестве...
есть еще папка layout, в которой по смыслу хранятся представления, которые будут использовать остальные модули.
пока проблема есть одна и небольшая: общие данные. копировать их глупо. а где хранить? чтобы потом исправить,
вот список того, что уже вылезает за свои рамки и лезет в чужие модули:
1) один Spinner на всех! все используют его из layout/main. (перенес в common)
2) feed model и collection используются в main layout (перенес в layout/main)

ПРИ ПУБЛИКАЦИЮ:
пока ничего)00

ТРЕШ:
backbone.js mobile????
мб нужно просто крепиить html загрузки между вставками в регион. и всего то?
mvvm backbone может стоит того...
БЭМ говно, shadow DOM збс!
underscore просто чудесная вещь... прелести фп + исходный js. всегда использовать его, если возможно.

БУГУРТ:
* libsass полное говно. если ты работаешь под win, значит ты нигер, тебе такая роскошь недоступна, сиди
и играй в косынку. после того, как ты поебешься с cygwin, попробуешь mingw и msysgit ты поймешь, что под win
тебе не суждено собрать sassc. когда наконец ты решишь скачать скомпиленную версию, ты поймешь, что в сети ее нету.
а когда найдешь, обрастешь бородой и со счастливыми глазами будешь пытаться прикрутить ее к своей IDE. Но тут
твои приключения не заканчиваются! Любая версия скомпиленная под win будет багованной, как вся твоя жизнь.
Все, конец, устанавливаем Ruby, потому что ебал я все эти эксперименты... Хотя и тут придется попариться.
НИЧЕГО не будет работать, пока вы запускаете IDE не от имени Администратора. p.s: а Ruby порт тормозной.

ПЛАН:
* странички для неавторизованных
* pushstate
* список событий:
    * endless scrolling (пока использовать "загрузить еще")
    * убрать back из layout
    * что происходит с коллекцией событий после очистки списка?
* страничка события:
    * указать на карте (лучше behavior и пихнуть еще в ленту)
* комментарии:
    * signalr
    * endless scrolling
* создание события:
    * загружать фотки
* кнопка выхода и скрытия div в шапке
* настройки:
    * квадраты
* как сделана рега на основе внешней авторизации?
* событие по радису, нерабочий пример: plat=0.01, plng = 0, prad = 0.05, когда
в lat = 0 lng = 0 находится событие
*
* где правильно вызывать fetch? в инициализации моделей или в контроллере (медиаторе)?
* вынести в ресурсы многое (например icon: img/marker.png)
    *дефолтный аватар пользователя...
* signalr как-то криво вставил
* свод законов 1
* спиннер при добавлении (можно полоску как у ютюба)
* события в океане...
* спиннер в нахождении локации события... хотя вообще говоря она должна с сервера приходить!!